


campaigns:
  description: >
    Use the account {account_id} to get the campaigns.
    Use the pageIndex and pageSize parameters to get all campaigns for the account.
    Do not make more API calls than necessary.
  expected_output: >
    A list of campaigns for the account formatted as JSON.
  agent: campaign_manager

campaigns_file:
  description: >
    Write the campaigns to a file using the FileWriterTool.
    The file name is 'campaigns.json', the directory is 'output' and the content is the list of campaigns formatted in JSON.
  expected_output: >
    A list of campaigns for the account formatted as JSON.
  agent: file_manager
  context:
    - campaigns
  

# auction_lineitems:
#   description: >
#     Interate through the cached campaigns and for each campaign use the campaigh {id} to get the auction lineitems.
#     If there total items across all pages is zero simply provide an empty list.
#     Use the pageIndex and pageSize parameters to get all lineitems for the campaign.
#     Do not make more API calls than necessary.
#     Using the FileWriter tool, write a file contaning the list of lineitems in JSON format, the directory is 'output', 
#     the file name is '{campaign name}_auction_lineitems.json' and
#     the content is the list of auction linitems formated in JSON.
#   expected_output: A list of auction lineitems for the campaign formatted as JSON.
#   agent: lineitems_manager
#   context:
#     - campaigns

# preferred_lineitems:
#   description: >
#     Interate through the cached campaigns and for each campaign use the campaigh {id} to get the preferred lineitems.
#     If there total items across all pages is zero simply provide an empty list.
#     Use the pageIndex and pageSize parameters to get all lineitems for the campaign.
#     Do not make more API calls than necessary.
#     Write a file contaning the list of preferred lineitems in JSON format, the directory is 'output', 
#     the file name is '{campaign name}_preferred_lineitems.json' and
#     the content is the list of preferred linitems formated in JSON.
#   expected_output: >
#    A list of preferred lineitems formatted in JSON.
#   agent: lineitems_manager
#   context:
#     - campaigns

# lineitems_budget_chart:
#   description: >
#     For each campaign, analyze the preferred and auction lineitems.
#     step 1. Using auction and preferred lineitems reduce the data to a table of whole month intervals containin the total budget for auction line and the total budget for preferred lineitems, 
#     for each month. with the output like this example 
#     [{date: '2021-01-01', auction: 1000.00, preferred: 2000.00},{date: '2021-02-01', auction: 1500.00, preferred: 2500.00}]
#     step 2. Produce a bar chart for each campaign using the data from step 1, where the x-axis is the date and the y-axis is the total budget, 
#     the file name is the campaign name and its ID and the path is 'output',
#     the chart title is the campaign name and its ID,
#     the categories ar the date,
#     the values are the auction and preferred values.
#     step 3. Sum the the number of auction lineitems and preferred lineitems for all campaigns and output as a table.

#   expected_output: >
#     A bar chart for each campaign where the dates is the categories and the values auction and preferred. The tile is the campaign name and ID. The file_name is the campaign name and ID.  
#     A table showing the campaign name, campaign id and the count of preferred and auction lineitems.
#   agent: analyst
#   context:
#     - preferred_lineitems
#     - auction_lineitems
#     - campaigns
